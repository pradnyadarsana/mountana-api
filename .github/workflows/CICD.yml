# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Code Integration & Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

#    - name: Build and Push Docker Image
#      uses: mr-smithers-excellent/docker-build-push@v4
#      with:
#        image: pradnyadarsana/mountana-mountain-service
#        registry: docker.io
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Build & Push Action
      # You may pin to the exact commit or the version.
      # uses: mr-smithers-excellent/docker-build-push@f8f78238603ab7953b961d99dc93ef0701295c60
      uses: mr-smithers-excellent/docker-build-push@v6.2
      with:
        # Name of the Docker image
        image: pradnyadarsana/mountana-api
        # Tags override for Docker image
        tags: latest
        # Target Docker registry
        registry: docker.io
        # Docker registry username
        username: ${{ secrets.DOCKER_USERNAME }}
        # Docker registry password
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildArgs: AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} , AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

#     - name: Kubernetes Deployment
#       # You may pin to the exact commit or the version.
#       # uses: TanmoySG/k-deploy-action@5f80b044093190fc872281a5f6372105f66260b6
#       uses: TanmoySG/k-deploy-action@v0.2.2-alpha
#       with:
#         # Path to Kubeconfig
#         kubeconfig: ./kubeconfig.yaml
#         # Kubernetes Namespace
# #        namespace: mountana
#         # Path to manifest Files
#         manifest: ./k8s-deploy.yml

    - name: Call Render API Deploy Hook
      env:
        API_URL: ${{ secrets.API_URL }}
      #   API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        curl -X GET "$API_URL" \
        # -H "Content-Type: application/json" \
        # -H "Authorization: Bearer $API_TOKEN" \
        # -d '{"key1":"value1", "key2":"value2"}'
